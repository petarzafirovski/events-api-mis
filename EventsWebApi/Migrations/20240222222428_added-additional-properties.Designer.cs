// <auto-generated />
using System;
using EventsWebApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EventsWebApi.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20240222222428_added-additional-properties")]
    partial class addedadditionalproperties
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EventsWebApi.Model.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Artist")
                        .HasColumnType("longtext");

                    b.Property<string>("BriefDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("CreatedById")
                        .HasColumnType("longtext");

                    b.Property<string>("EventCenter")
                        .HasColumnType("longtext");

                    b.Property<string>("EventCenterLocation")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("EventEndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("EventStartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EventUrl")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsFree")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Picture")
                        .HasColumnType("longtext");

                    b.Property<byte[]>("Poster")
                        .HasColumnType("longblob");

                    b.Property<string>("PosterPrefix")
                        .HasColumnType("longtext");

                    b.Property<string>("TicketSalesLink")
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("EventsWebApi.Model.JoinedEvents", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "EventId");

                    b.HasIndex("EventId");

                    b.ToTable("JoinedEvents");
                });

            modelBuilder.Entity("EventsWebApi.Model.JoinedEvents", b =>
                {
                    b.HasOne("EventsWebApi.Model.Event", "Event")
                        .WithMany("JoinedEvents")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("EventsWebApi.Model.Event", b =>
                {
                    b.Navigation("JoinedEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
